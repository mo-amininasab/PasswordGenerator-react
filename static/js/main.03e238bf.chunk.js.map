{"version":3,"sources":["components/Navbar.jsx","components/ContainerCenter.jsx","components/UI/CheckBoxInput.jsx","components/UI/NumberInput.jsx","components/GeneratorBox.jsx","components/PasswordBar.jsx","components/UI/DoubleBoarderContainer.jsx","App.js","index.js"],"names":["Navbar","className","href","ContainerCenter","props","children","CheckBoxInput","type","id","onChange","defaultChecked","isChecked","htmlFor","label","NumberInput","min","max","value","GeneratorBox","useState","length","setLength","isCheckBoxInputLowercase","setIsCheckBoxInputLowercase","isCheckBoxInputUppercase","setIsCheckBoxInputUppercase","isCheckBoxInputNumbers","setIsCheckBoxInputNumbers","isCheckBoxInputSymbols","setIsCheckBoxInputSymbols","useEffect","bag_of_chars","thePassword","i","Math","floor","random","onPasswordCreated","isRegenerate","event","target","checked","PasswordBar","createdPassword","onClick","elementText","document","getElementById","textContent","navigator","clipboard","writeText","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","DoubleBoarderContainer","App","setCreatedPassword","setIsRegenerate","thePass","ReactDOM","render"],"mappings":"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","file":"static/js/main.03e238bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className='text-center p-4 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500'>\r\n            <h1 className=\"text-2xl font-semibold text-white mb-2\">PasswordGenerator</h1>\r\n            <a href='/' className=\"text-gray-50\">About me</a>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction ContainerCenter(props) {\r\n    return (\r\n        <div className=\"min-h-screen max-w-lg mx-auto flex flex-col text-center py-12 px-4 sm:px-6 lg:px-8\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContainerCenter\r\n","import React from \"react\";\r\n\r\nfunction CheckBoxInput(props) {\r\n  return (\r\n    <div className=\"flex flex-row space-x-2\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={props.id}\r\n        className=\"checked:bg-blue-600 checked:border-transparent my-auto\"\r\n        onChange={props.onChange}\r\n        defaultChecked={props.isChecked}\r\n      />\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBoxInput;\r\n","import React from \"react\";\r\nconst NumberInput = (props) => {\r\n  return (\r\n    <div className=\"flex flex-row space-x-2\">\r\n      <label htmlFor=\"length\" className=\"my-auto\">\r\n        {props.label}\r\n      </label>\r\n      <input\r\n        type=\"Number\"\r\n        id=\"length\"\r\n        className=\"w-10 bg-gray-200 border border-gray-400 rounded hover:border-gray-700 focus:border-gray-400\"\r\n        min={props.min}\r\n        max={props.max}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport CheckBoxInput from \"./UI/CheckBoxInput\";\r\nimport NumberInput from \"./UI/NumberInput\";\r\n\r\nfunction GeneratorBox(props) {\r\n  const [length, setLength] = useState(12);\r\n  const [isCheckBoxInputLowercase, setIsCheckBoxInputLowercase] =\r\n    useState(true);\r\n  const [isCheckBoxInputUppercase, setIsCheckBoxInputUppercase] =\r\n    useState(false);\r\n  const [isCheckBoxInputNumbers, setIsCheckBoxInputNumbers] = useState(false);\r\n  const [isCheckBoxInputSymbols, setIsCheckBoxInputSymbols] = useState(false);\r\n\r\n  const numberInputOnChangeHandler = (event) => {\r\n    setLength(event.target.value);\r\n  };\r\n\r\n  const CheckBoxInputLowerCaseOnChangeHandler = (event) => {\r\n    setIsCheckBoxInputLowercase(event.target.checked);\r\n  };\r\n\r\n  const CheckBoxInputUpperCaseOnChangeHandler = (event) => {\r\n    setIsCheckBoxInputUppercase(event.target.checked);\r\n  };\r\n\r\n  const CheckBoxInputNumbersOnChangeHandler = (event) => {\r\n    setIsCheckBoxInputNumbers(event.target.checked);\r\n  };\r\n\r\n  const CheckBoxInputSymbolsOnChangeHandler = (event) => {\r\n    setIsCheckBoxInputSymbols(event.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let lowers = \"abcdefghijklmnopqrstuvwxyz\";\r\n    let uppers = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    let numbers = \"0123456789\";\r\n    let symbols = \"!@#$%^&*()\";\r\n\r\n    let is_lower = isCheckBoxInputLowercase;\r\n    let is_upper = isCheckBoxInputUppercase;\r\n    let is_numbers = isCheckBoxInputNumbers;\r\n    let is_symbols = isCheckBoxInputSymbols;\r\n\r\n    let bag_of_chars = \"\";\r\n\r\n    if (is_lower) {\r\n      bag_of_chars += lowers;\r\n    }\r\n\r\n    if (is_upper) {\r\n      bag_of_chars += uppers;\r\n    }\r\n\r\n    if (is_numbers) {\r\n      bag_of_chars += numbers;\r\n    }\r\n\r\n    if (is_symbols) {\r\n      bag_of_chars += symbols;\r\n    }\r\n\r\n    let thePassword = \"\";\r\n\r\n    if (bag_of_chars.length === 0) {\r\n      thePassword = \"null\";\r\n    } else {\r\n      for (let i = 0; i < length; i++) {\r\n        const index = Math.floor(Math.random() * bag_of_chars.length);\r\n        thePassword += bag_of_chars[index];\r\n      }\r\n    }\r\n\r\n    props.onPasswordCreated(thePassword);\r\n\r\n    return;\r\n  }, [\r\n    length,\r\n    isCheckBoxInputLowercase,\r\n    isCheckBoxInputUppercase,\r\n    isCheckBoxInputNumbers,\r\n    isCheckBoxInputSymbols,\r\n    props.isRegenerate,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-min mx-auto\">\r\n      <NumberInput\r\n        label=\"Length:\"\r\n        min=\"6\"\r\n        max=\"99\"\r\n        value={length}\r\n        onChange={numberInputOnChangeHandler}\r\n      />\r\n      <CheckBoxInput\r\n        id=\"lowercase\"\r\n        label=\"Lowercase\"\r\n        onChange={CheckBoxInputLowerCaseOnChangeHandler}\r\n        isChecked={isCheckBoxInputLowercase}\r\n      />\r\n      <CheckBoxInput\r\n        id=\"uppercase\"\r\n        label=\"Uppercase\"\r\n        onChange={CheckBoxInputUpperCaseOnChangeHandler}\r\n        isChecked={isCheckBoxInputUppercase}\r\n      />\r\n      <CheckBoxInput\r\n        id=\"numbers\"\r\n        label=\"Numbers\"\r\n        onChange={CheckBoxInputNumbersOnChangeHandler}\r\n        isChecked={isCheckBoxInputNumbers}\r\n      />\r\n      <CheckBoxInput\r\n        id=\"symbols\"\r\n        label=\"symbols\"\r\n        onChange={CheckBoxInputSymbolsOnChangeHandler}\r\n        isChecked={isCheckBoxInputSymbols}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeneratorBox;\r\n","import React from \"react\";\r\n\r\nfunction PasswordBar(props) {\r\n  const copyToClipboard = () => {\r\n    let elementText = document.getElementById(\"password\").textContent;\r\n    return navigator.clipboard.writeText(elementText);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <p className=\"text-center font-mono text-md whitespace-nowrap overflow-auto\" id=\"password\">\r\n        {props.createdPassword}\r\n      </p>\r\n      <div className=\"flex mx-auto space-x-2 mt-3\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"w-20 py-2 mx-auto bg-red-500 hover:bg-red-700 text-white font-bold rounded focus:outline-none focus:shadow-outline bg-gradient-to-r from-pink-400 to-yellow-500 focus:ring focus:ring-pink-500\"\r\n          onClick={copyToClipboard}\r\n        >\r\n          Copy\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"w-9 py-2 mx-auto bg-red-500 hover:bg-red-700 text-white font-bold rounded focus:outline-none focus:shadow-outline bg-gradient-to-r from-pink-400 to-yellow-500\"\r\n          onClick={props.onClick}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6 mx-auto\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordBar;\r\n","import React from 'react'\r\n\r\nfunction DoubleBoarderContainer(props) {\r\n    return (\r\n        <div className=\"p-4 mt-2 text-center mx-auto my-6 w-52 max-w-xs border-double border-4 border-indigo-400 rounded-lg shadow-xl\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoubleBoarderContainer\r\n","import React, { useState } from \"react\";\n\nimport Navbar from \"./components/Navbar\";\nimport ContainerCenter from \"./components/ContainerCenter\";\nimport GeneratorBox from \"./components/GeneratorBox\";\nimport PasswordBar from \"./components/PasswordBar\";\nimport DoubleBoarderContainer from \"./components/UI/DoubleBoarderContainer\";\n\nfunction App() {\n  const [createdPassword, setCreatedPassword] = useState(\"\");\n  const [isRegenerate, setIsRegenerate] = useState(false);\n\n  const passwordCreatedHandler = (thePass) => {\n    setCreatedPassword(thePass);\n    setIsRegenerate(false);\n  };\n\n  const regeneratePasswordHandler = () => {\n    setIsRegenerate(true);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <ContainerCenter>\n        <DoubleBoarderContainer>\n          <PasswordBar\n            createdPassword={createdPassword}\n            onClick={regeneratePasswordHandler}\n          />\n        </DoubleBoarderContainer>\n\n        <DoubleBoarderContainer>\n          <GeneratorBox\n            onPasswordCreated={passwordCreatedHandler}\n            isRegenerate={isRegenerate}\n          />\n        </DoubleBoarderContainer>\n\n        <p className=\"text-center text-gray-500 text-xs mb-12\">\n          &copy;2021. All rights reserved.\n        </p>\n      </ContainerCenter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}